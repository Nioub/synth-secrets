<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en" lang="en">
  <head>
    <title>From Sample &amp; Hold To Sample-rate Converters (1)</title>
    <link rel="stylesheet" type="text/css" href="css/book.css" />
  </head>

  <body>
    <section class="chapter" title="From Sample &amp; Hold To Sample-rate Converters (1)" epub:type="chapter" id="ch016">
      <h2 class="title">From Sample &amp; Hold To Sample-rate Converters (1)</h2>

      <p>You might think that after 15 chapters worth of articles about oscillators, filters, amplifiers, LFOs, contour generators, external signal processors, and heaven knows what else, we would have exhausted the modules that make up an analogue synthesizer. Not a bit of it! This chapter, we’re going to start with a common synth component, the Sample and Hold module, and consider its use with a few less common ones. This potentially obscure discussion will nevertheless take us from Emerson, Lake and Palmer to Donna Summer, and from clock pulses to the the threshold of analogue-to-digital conversion. Not bad, eh?</p>

      <h3>Not All Samples Are Digital</h3>
      <p>Given that it’s not necessary for generating any conventional imitative sounds, the Sample and Hold (S&amp;H) module is remarkably common. Early Moog modulars had them, as did classic synths such as the ARP 2600 and Odyssey, so many of the characteristic sounds they make possible have entered common usage. To understand S&amp;H, take a peek at <a href="#fig-16-1">Figure 16.1</a>. This is another of my ‘remarkably simple’ circuits, comprising just two components: a capacitor, and a switch.</p>
      <figure id="fig-16-1">
        <img src="images/fig-16-1.png" />
        <figcaption>Figure 16.1</figcaption>
      </figure>

      <p>Imagine, if you will, that a standard synthesizer signal is presented to the input on the left of the diagram. If doesn’t matter whether this is an audio signal, an LFO, an envelope, or anything else. Now imagine that, just for an instant, the switch closes. Provided that the capacitor can react quickly enough, it then charges up (or discharges down) to the voltage at the input, thus ‘sampling’ that voltage. Then, once the switch has opened again, the voltage across the capacitor cannot change. This is because on the left-hand side there is no circuit and, on the right-hand side, the impedance is infinite (which means that no current can flow). However, although no current flows, you can still measure the voltage across the output. (Of course, the impedance is never truly infinite, so the voltage will decay slowly, and one measure of the quality of an S&amp;H module is the slowness of the rate at which this decay occurs.)</p>
      <p>So that’s all there is to it… when the switch is closed, the capacitor ‘samples’ the input voltage. When the switch is open, the capacitor ‘holds’ that voltage, allowing other circuits to respond to it as appropriate. Sample and Hold… simple, yes?</p>

      <h3>Clock Generators</h3>
      <p>Now, if you were limited to closing the switch in <a href="#fig-16-1">Figure 16.1</a> manually, the S&amp;H would not be of much use. So synthesizers have electronic switches, and provide another module that is capable of opening and closing them at high speeds. The most common such module is one that we have not yet discussed in Synth Secrets. It is the Clock Generator.</p>

      <p>As you might guess from its name, a Clock Generator provides an evenly spaced stream of ‘ticks’ in the form of short pulses (see <a href="#fig-16-2">Figure 16.2</a>). Of course, this is simply a specialised form of oscillator: one that produces a pulse wave at, typically, subsonic and low audio frequencies. Most often, you would use the clock as a timer, for example, triggering envelopes or as a ‘sync’ or reset source for conventional audio oscillators and LFOs. However, those are topics for another day.</p>
      <figure id="fig-16-2">
        <img src="images/fig-16-2.png" />
        <figcaption>Figure 16.2</figcaption>
      </figure>

      <p>Today’s use for the Clock Generator is to provide a stream of very short pulses that trigger the switch in <a href="#fig-16-1">Figure 16.1</a>. In other words, when the pulse is On, the S&amp;H circuit samples, and when the pulse is Off, the S&amp;H holds. As you can see, I have shown the clock ticks as +10V pulses with negligible width. In practice, many S&amp;H circuits will perceive a trigger when they receive any positive-going waveform with a sharp leading edge.</p>
      <p>If we marry our clock generator to the S&amp;H circuit, we can devise a composite module that incorporates two sub-modules: the clock and the S&amp;H circuit itself (see <a href="#fig-16-3">Figure 16.3</a>).</p>
      <figure id="fig-16-3">
        <img src="images/fig-16-3.png" />
        <figcaption>Figure 16.3</figcaption>
      </figure>

      <p>Let’s analyse what’s happening in <a href="#fig-16-3">Figure 16.3</a>. It shows a sine wave entering the signal input of the S&amp;H module. At the same time, a clock provides a stream of pulses that it presents to the S&amp;H’s trigger input. The output produced by the S&amp;H circuit is then the ‘rectangular’ waveform shown in the Figure.</p>
      <p>If the reason for this output is not clear, <a href="#fig-16-4">Figure 16.4</a> should clarify things. Each time the S&amp;H module receives a trigger from the clock generator, it measures (or ‘samples’) the voltage of the input signal (shown in red). It then holds this voltage (the blue line) until it receives the next trigger, at which point it repeats the operation. It ‘samples’ and it ‘holds’, just as we’ve discussed.</p>
      <figure id="fig-16-4">
        <img src="images/fig-16-4.png" />
        <figcaption>Figure 16.4</figcaption>
      </figure>

      <p>This result would not be very interesting if a sine wave was the only signal you could present to the S&amp;H’s audio input. Fortunately, the input signal can be anything: a synthesized audio waveform, a slowly varying CV, or even an external signal such as the sound from a CD player or of an instrument being played. However, most synthesizers also have a noise generator that produces a ‘random’ signal, and this is the most commonly used type of S&amp;H input. Why? Because it creates a number of musically pleasing effects.</p>
      <p><a href="#fig-16-5">Figure 16.5</a> shows what happens when you S&amp;H a noise signal. Again, the input is the red line, with the output shown in blue. Now, what can we do with this output? The first thing to remember is that there’s nothing stopping us from directing the output signal to the inputs of any other synthesizer modules, whereupon it will modify any other CVs or signals within the synthesizer. However, there are two common uses that you will have heard many times, and which deserve special mention here.</p>
      <figure id="fig-16-5">
        <img src="images/fig-16-5.png" />
        <figcaption>Figure 16.5</figcaption>
      </figure>

      <p>The first involves directing the S&amp;H output to an oscillator’s CV input so that it makes the pitch vary randomly. Interesting on an analogue synth, this facility comes into its own on a digital synth. This is because – with a suitable amplifier to attenuate the variations – you can use this effect to add delicate random fluctuations to the pitch of a sound. Far less obvious (and therefore more interesting) than cyclic LFO modulation, it’s the key to humanising many digital sounds, and it’s absolutely vital to any impersonations of real instruments that waver slightly as the note plays. For this reason, many LFOs offer a ‘random’ output waveform alongside the sine, pulse and triangle waves that most provide.</p>
      <p>The second example requires you to direct the S&amp;H output to the CV input of a low-pass filter. This affects the high-frequency content of the sound and, therefore, each clock pulse changes the timbre of the audio passing through the filter. If, like me, you grew up with ‘First Impression’ from ELP’s Karn Evil 9 ringing in your ears, you’ll know this sound intimately. Indeed, this combination of clock, S&amp;H and noise (see <a href="#fig-16-6">Figure 16.6</a>) is so deeply routed in synthesis that some synthesizers combine them in a single module. The RS Integrator module in <a href="#fig-16-7">Figure 16.7</a> demonstrates this. At the top of its panel, you’ll find a noise generator with an associated level control and output. Beneath this, you have the signal input for the S&amp;H, the clock input, the S&amp;H output, and a level control that adjusts the gain of the output signal. Below this, you have the clock itself, with a frequency control and output. There is just one control that is less than obvious: the ‘one shot’ button allows you to trigger the S&amp;H switch manually.</p>
      <figure id="fig-16-6">
        <img src="images/fig-16-6.png" />
        <figcaption>Figure 16.6</figcaption>
      </figure>
      <figure id="fig-16-7">
        <img src="images/fig-16-7.png" />
        <figcaption>Figure 16.7</figcaption>
      </figure>

      <p>Unlike some other synthesizers with prepatched S&amp;H modules, the three sub-modules in the RS40 are not pre-connected ‘behind the scenes’ (if they were, the ‘one shot’ button would not work). This means that you must patch sources into both the EXT SRC IN and EXT CLK IN sockets. The simplest and most obvious sources for these purposes are the noise generator and clock outputs that lie immediately above and below them but, as suggested above, you are by no means limited to these.</p>
      <p>Before moving on, we should look at two further refinements to the S&amp;H concept. The first involves the nature of the signals that will trigger the sampling operation. If you think about the pulses produced by the clock generator you will realise that they can not be truly instantaneous – they have a duration. So, is the sample taken on the leading edge of the pulse, on the trailing edge, or (less usually) on both edges? On analogue synthesizers, it’s usually the leading edge that does the trick. Nevertheless, if you want to experiment with trailing-edge triggering you can do so if you invert the trigger signal and provide a suitable DC offset. </p>
      <p>The second refinement is even more esoteric. Let’s face it, you won’t often trip across a Buchla Model 264 Quad Sample and Hold/Polyphonic Adaptor (on which this feature appears) at your local car-boot sale. However, you’ll find the same features on one of the most common patchable analogue synthesizers of them all. The effect is ‘Track and Hold’ and the common synth is the Korg MS20.</p>
      <p>Of course, Buchla and Korg didn’t silkscreen the name ‘T&amp;H’ on their modules; they called them S&amp;H modules like everybody else. However, there’s a difference, and it lies in way that the circuit handles the clock pulse. Unlike everything discussed above, sampling is not triggered by an edge of the clock pulse and then held until the next equivalent edge. Instead, the circuit is transparent when the pulse is high, and the hold is initiated by the falling edge, remaining constant until the clock goes high again. As you might imagine, this means that you can use the duty cycle of your clock pulse to determine the proportion of time that the output (in blue) tracks the input (in red), and the proportion that it holds (see <a href="#fig-16-8">Figure 16.8</a>).</p>
      <figure id="fig-16-8">
        <img src="images/fig-16-8.png" />
        <figcaption>Figure 16.8</figcaption>
      </figure>

      <p>T&amp;H modules are powerful tools that provide many possibilities not achievable using conventional S&amp;H modules. For example, you can use one together with one of last chapter’s Envelope Followers so that the amplitude of an external audio signal determines whether the module Tracks or Holds. Interesting, yes? Furthermore, you can use the T&amp;H as a conventional S&amp;H if you use a clock with a pulse of minimal duration.</p>

      <h3>Introducing Sequencers</h3>

      <p>There are many other enhancements to the basic S&amp;H concept, and other modules – such as pulse shapers – that you can add to generate specific effects. Nevertheless, while an S&amp;H module is very useful for creating random effects, and for adding that ineffable sparkle to many sounds, it is not easy to create melodies using one. Nor will an S&amp;H easily provide conventional movement within your sounds. For this, we need a module that allows you to decide the value of its output CV at every clock step. We call such a device an analogue sequencer.</p>
      <p><a href="#fig-16-9">Figure 16.9</a> shows the simplest form of analogue sequencer (which, henceforth, I’ll simply call a ‘sequencer’). It has 16 steps, and a dedicated potentiometer, controlled by a fader, determines the output at each step. A clock generator (which may be internal or provided by an outside source) causes the sequencer to step from one fader to the next, and from step 16 back to step 1 when it reaches the end of the row. Of course, the potentiometers could be knobs – and they often are – but it’s much easier to see what’s happening using faders.</p>
      <figure id="fig-16-9">
        <img src="images/fig-16-9.png" />
        <figcaption>Figure 16.9</figcaption>
      </figure>

      <p>Let’s suppose that the output is 0V when a fader is at the bottom of its travel, and +2V when it is at the top. If you then direct the output voltage to the pitch CV input of a 1V/octave oscillator, you can determine the pitch anywhere in a two-octave range. This makes it possible to construct simple 16-note melodies that repeat continuously while the clock is running.</p>
      <p>Look at <a href="#fig-16-10">Figure 16.10</a>. If you’ve used a sequencer extensively, you’ll recognise it immediately. It’s the ‘do-do de-de da-da de-de’ bass line from thousands of best-forgotten disco hits inspired by Donna Summer’s ‘I Feel Love’. If you look at <a href="#fig-16-11">Figure 16.11</a>, you’ll see that the configuration of the faders on the sequencer exactly mimics the notes as they would appear on a musical staff. The similarity is not surprising, given that the two systems use identical concepts for representing musical pitch.</p>
      <figure id="fig-16-10">
        <img src="images/fig-16-10.png" />
        <figcaption>Figure 16.10</figcaption>
      </figure>
      <figure id="fig-16-11">
        <img src="images/fig-16-11.png" />
        <figcaption>Figure 16.11</figcaption>
      </figure>

      <p>In reality, sequencers are often far more complex than the one shown in <a href="#fig-16-9">Figure 16.9</a>. A powerful unit will offer multiple rows of CV generators, multiple outputs, multiple clock inputs for the rows, CVs for the clocks themselves, range controls for the CVs, note-skip capabilities, variable sequence lengths, and many other facilities. However, the underlying concept remains the same.</p>

      <h3>Voltage Quantisation</h3>

      <p>Despite the power of the sequencer shown above, it’s a very laborious task to make it create musical sequences. Why? It’s because the faders (or, in this case, the knobs) are capable of producing any voltage within their range – including values that lie between the notes in a conventional musical scale. This means that, instead of the 25 semitones that exist in the full two octaves discussed above, or the 121 that lie within the 0V to +10V range of the sequencer, there are thousands, maybe millions, of discrete voltages available. This makes precise tuning almost impossible.</p>
      <p>The solution to this problem lies in a module called a Voltage Quantiser, or simply a ‘quantiser’ – a device that rounds every voltage passing through it up or down to that which produces an exact semitone. It does this by making sure that, no matter what the input voltage may be, the output is one of the voltages that define the well-tempered scale for a 1V/Octave synthesizer (see Table 1 and <a href="#fig-16-13">Figure 16.13</a>). As you can see, the ‘spacing’ between the voltages of the notes is 1/12th of a volt (although the relationship between the frequencies is not so simple).</p>
      <figure id="fig-16-13">
        <img src="images/fig-16-13.png" />
        <figcaption>Figure 16.13</figcaption>
      </figure>

      <p>The presence of the quantiser makes it much easier to set the controls on the sequencer to create recognisable melodies or bass lines. Similarly, you can use it to quantise the output from your S&amp;H module to be in semitones (ie. ‘real’ notes) rather than random pitches. You can even use it to convert a continuously rising or falling CV into a ‘stepped’ one – an effect that we often use to convert portamento into glissando (see <a href="#fig-16-14">Figure 16.14</a>). As you can see, this is very similar to the output of the S&amp;H module in <a href="#fig-16-3">Figure 16.3</a>. The difference is that, whereas the S&amp;H measures a new voltage every time it receives a trigger from an outside source, the quantiser steps between voltages every time the input moves between ranges of values.</p>
      <figure id="fig-16-14">
        <img src="images/fig-16-14.png" />
        <figcaption>Figure 16.14</figcaption>
      </figure>

      <h3>Programmable Scale Generators</h3>

      <p>There’s an enhanced type of quantiser that’s also worthy of special mention. This is the ‘Scale Generator’ (or Scale Quantiser), a module that quantises the voltage in such a way that the output conforms to a predetermined musical scale. A programmable scale generator takes this idea one stage further: while it may include predetermined scales as options, it also allows you to choose the notes that define any desired scale. This leads to an unexpected combination of modules, and one that produces interesting musical effects. <a href="#fig-16-15">Figure 16.15</a> shows how it works.</p>
      <figure id="fig-16-15">
        <img src="images/fig-16-15.png" />
        <figcaption>Figure 16.15</figcaption>
      </figure>

      <p>Firstly, the S&amp;H module produces a succession of random voltages. The programmable scale generator (the ‘PSG’) then quantises these voltages to conform to the notes in a desired scale. You direct the output from the PSG to the pitch CV input of an oscillator which, as a consequence, produces random notes – but always within that desired scale. This is particularly pleasing if you make the defined scale an arpeggio because you then have a random arpeggiator – one of my favourite effects, and still available only on a handful of synths.</p>

      <h3>Slewing The Output</h3>

      <p>So far this chapter, we’ve only discussed the creation of stepped voltages from continuously varying signals. But there are many times when you would like the transitions from one voltage to another to be a little less abrupt. So let’s finish by looking at ways in which we can smooth our S&amp;H or sequenced output.</p>
      <p>When you press a key on a voltage-controlled synth, you provide a voltage sample to an oscillator’s pitch CV input. You specify the voltage itself by choosing which key to play. Then, when you press a second key, you present a second sample to the oscillator’s input, and the pitch jumps almost instantaneously to that defined by the new voltage. But if you insert a simple Slew Generator (see last chapter) into the keyboard CV signal path, you smooth the transitions at the oscillator’s CV input, thus making the pitch glide from one note to the next. This, of course, is portamento.</p>
      <p><a href="#fig-16-16">Figure 16.16</a>, below, shows the change that a simple slew generator will make to an S&amp;H signal. As you can see, it rounds the transitions and creates a characteristic ‘shark’s tooth’ pattern in the output waveform. We obtain this shape because the rate of transition between states is much lower that the slew generator’s cut-off frequency, and because I’ve depicted the slew as an exponential glide between voltages, as it would be on most vintage synths. But what happens if we increase the speed of the S&amp;H clock, or change the nature of the filter so that the signal is ‘smoothed’ in a more conventional way? <a href="#fig-16-17">Figure 16.17</a> shows what happens when we smooth a stepped voltage using a sophisticated filter that has a response more in keeping with the sample rate.</p>
      <figure id="fig-16-16">
        <img src="images/fig-16-16.png" />
        <figcaption>Figure 16.16</figcaption>
      </figure>
      <figure id="fig-16-17">
        <img src="images/fig-16-17.png" />
        <figcaption>Figure 16.17</figcaption>
      </figure>

      <p>But look again: is the red line the input from an S&amp;H module, with the blue line the smoothed output? Or is the blue line an audio signal input, with the red line the S&amp;H output? Tricky! And it’s the question that, in one leap, takes us all the way from the analogue domain to the digital domain and back again. It’s a leap that we’ll take next chapter.</p>
    </section>
  </body>
</html>
