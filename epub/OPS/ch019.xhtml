<?xml version="1.0" encoding="utf-8"?>

<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops" xml:lang="en" lang="en">
  <head>
    <title>Duophony</title>
    <link rel="stylesheet" type="text/css" href="css/book.css" />
  </head>

  <body>
    <section class="chapter" title="Duophony" epub:type="chapter" id="ch019">
      <h2 class="title">Duophony</h2>

      <p>When is a monosynth not a monosynth? The answer, of course, is when it’s a duosynth and can play two notes at a time rather than just one. No big deal, you might think.</p>
      <p>But is the synth in question merely duophonic or does it offer a more powerful duo-timbral architecture? Does it offer single triggering or multi-triggering, and are there different ways in which you can combine the sounds generated? There’s more to this duophonic malarkey than you might at first imagine.</p>

      <h3>The Birth Of Duophony</h3>
      <p>Let’s start at the beginning. With few exceptions, early analogue synthesizers played one note at a time. It didn’t matter how many oscillators, filters, contour generators or whatnots you threw into a sound, they all responded together when you played a key on the controlling keyboard. This is not surprising, as it’s relatively simple to design a keyboard that generates a single pitch CV, a single trigger and a single gate.</p>
      <p><a href="#fig-19-1">Figure 19.1</a> represents a typical monosynth. It has two oscillators whose pitches are controlled by a common pitch CV, determined by the choice of key that you play on the keyboard. You can select the waveforms generated by each oscillator, and you can even detune one with respect to the other, but the single pitch CV ensures that the relationship between them remains constant, no matter which key you play. (This being a monosynth, it doesn’t matter whether you play more than one note at a time. Only one will produce a pitch CV – see last month’s instalment of ‘Synth Secrets’ for more details.)</p>
      <figure id="fig-19-1">
        <img src="images/fig-19-1.png" />
        <figcaption>Figure 19.1</figcaption>
      </figure>
      <p>The outputs from the two oscillators are mixed before they travel along the rest of the signal path, to a VCF and a VCA whose actions are controlled by a pair of contour generators. These can respond quite differently from each other (ie. you can set different values for the contour stages) but they are always initiated by the same trigger and gate pulses generated when you press the keys. Given this configuration, we need only one item of information – the note priority system – to enable us to predict, with complete certainty, the response of the synthesizer to any notes we choose to play.</p>
      <p>Now let’s shake things up a bit, and consider what happens if we make it possible for the keyboard to generate two pitch CVs simultaneously. But hang on a moment; before predicting how this will work, we must decide which two notes are going to generate the pitch CVs.</p>
      <p>Imagine that you’re standing in front of a duophonic synth (one whose keyboard generates two pitch CVs) which you have patched to produce a continuous sound, such as an organ. Now play a simple Dm7 chord: D, F, A, and C. Which two notes will you hear? The answer is determined by engineering: it’s simpler to design a keyboard that detects the highest and lowest notes than it is to design one that recognises the middle two notes, the most recent pair, or some other combination. Consequently, you will hear the D and the C.</p>
      <p>Now ask yourself what happens when you release the F. Simple. Nothing happens. The D and the C are still the lowest and highest notes (respectively). Now release the C. At this point, the A becomes the highest note, so you hear the D and the A. (See <a href="#fig-19-2">Figure 19.2</a>.)</p>
      <figure id="fig-19-2">
        <img src="images/fig-19-2.png" />
        <figcaption>Figure 19.2</figcaption>
      </figure>
      <p>To modify the dual-oscillator monosynth in <a href="#fig-19-1">Figure 19.1</a> to give the duophonic response shown in <a href="#fig-19-2">Figure 19.2</a>, we add a second pitch CV to create <a href="#fig-19-3">Figure 19.3</a>. With this architecture, the keyboard is capable of generating two independent pitch CVs, with CV1 directed to oscillator 1, and CV2 directed to oscillator 2. Now, when you play the sequence in <a href="#fig-19-2">Figure 19.2</a>, CV2 (which, for the sake of argument, represents the lowest note) causes oscillator 2 to play the continuous D, while CV1 (representing the highest note) plays the high C followed by the A.</p>
      <figure id="fig-19-3">
        <img src="images/fig-19-3.png" />
        <figcaption>Figure 19.3</figcaption>
      </figure>
      <p>Unfortunately, this explanation leaves two important questions unanswered. Firstly, what happens if you only play a single note? To answer this, we need to jump into the Sound On Sound time machine and set the controls for 1972…</p>

      <h3>CVs &amp; The ARP Odyssey</h3>
      <p>The ARP Odyssey was big news when it was launched, partly because it sounded great, and partly because it had a stunning features-per-kilo ratio. But it was something else that made the Odyssey special: it was the first commercial synth that allowed you to play two notes simultaneously. Indeed, the architecture employed by the Odyssey was similar to that shown in <a href="#fig-19-3">Figure 19.3</a>. OK, it had an LFO, a ring modulator, assignable contour generators, and loads more, but the basics were as shown.</p>
      <p>Unsurprisingly, when you play two notes on an Odyssey, it behaves as we have discussed. You can manipulate the oscillators’ settings individually, but their outputs are then mixed, and the filters and amplifier modify the composite, duo-pitched sound. Now let’s release one of the notes and see what happens. Hey… rather than disappearing (as would happen on a modern polyphonic synthesizer) the second note layers itself on top of the first! This, of course, is why the Odyssey is most often treated as a monosynth; if you play it as one, it responds as one, with both oscillators providing components in a single sound. Of course, what’s actually happening here is that the highest note and the lowest note are the same, and jumping from two single-oscillator notes to one dual-oscillator note results in an unnatural change in the tone.</p>
      <p><a href="#fig-19-4">Figure 19.4</a> shows how unpleasant this can be. It depicts a single drone held as the lowest note, plus a regular, beating highest note with gaps between each key release and the subsequent key press. (The ‘squiggle’ between each successive C in the input is called a rest, because that’s what it’s telling you to do.)</p>
      <figure id="fig-19-4">
        <img src="images/fig-19-4.png" />
        <figcaption>Figure 19.4</figcaption>
      </figure>
      <p>As you can see, when two notes are depressed, you hear them as separate notes of a certain timbre (which I have shown as red and blue). However, when just one note is held (in this case, the lower one) the two oscillators combine to produce a single note of a ‘fatter’ timbre, shown in purple. What’s more, the transitions between these states – shown as vertical arrows – are not instantaneous, and result in a rather unmusical glitch.</p>
      <p>As you can see, duophonic synths are more limited, and less intuitive, than you might expect, so here’s a Synth Secret:</p>
      <p><em>Duophonic synthesizers are far less than polyphonic synthesizers restricted to playing two notes at a time.</em></p>

      <h3>Duophonic Triggering</h3>
      <p>Let’s now consider the second question I promised: how does the triggering regime affect the two-note capabilities of a duophonic synthesizer?</p>
      <p>If you recall last month’s ‘Synth Secrets’, you’ll remember that there are two types of ‘monosynth’ triggering: single and multi. The Odyssey is a multi-triggering synthesizer, so it generates a trigger every time you play a note, even if another note is (or notes are) already depressed. Armed with this knowledge, let’s return to the Odyssey itself and repeat the experiment shown in <a href="#fig-19-4">Figure 19.4</a>.</p>
      <p>We’ll start by defining amplitude and filter contours for the sound we’re playing. For now, let’s assume that both are the same, or the following explanation becomes too complex. The contour is a simple Attack, Decay, Sustain, Release (A=5, D=5, S=5, R=5), and it looks like <a href="#fig-19-5">Figure 19.5</a>.</p>
      <figure id="fig-19-5">
        <img src="images/fig-19-5.png" />
        <figcaption>Figure 19.5</figcaption>
      </figure>
      <p>Now, if you played the sequence in <a href="#fig-19-4">Figure 19.4</a> on a truly polyphonic synthesizer, you would expect each note to be shaped individually, with each one following the ADSR contour shown. Unfortunately, on the Odyssey nothing could be further from the truth. The horrifying reality is shown in <a href="#fig-19-6">Figure 19.6</a>.</p>
      <figure id="fig-19-6">
        <img src="images/fig-19-6.png" />
        <figcaption>Figure 19.6</figcaption>
      </figure>
      <p>Ghastly, isn’t it? Both sets of notes (the upper four, and the single drone underneath) start healthily enough but, at the end of the first upper note, the apparent ‘upper’ amplitude drops instantaneously to zero. At the same moment, the apparent amplitude of the drone jumps up. This is because both oscillators are now contributing to the lower note. The situation remains like this until you play the second upper note, at which point the upper amplitude leaps back to the sustain level, the lower note drops to the sustain level, and both go into a truncated attack phase from the sustain level. This repeats for the third and fourth upper notes until, finally, the combined sound dies away when you release the drone. As I said, it’s horrifying.</p>
      <p>Yet… it has its uses. Imagine that you’re trying to play a line that’s so fast and convoluted that on a conventional monosynth you simply can’t release the notes quickly enough to let the next articulate correctly. On a lowest-note priority monosynth like the Minimoog this would be a bit of a disaster, but the Odyssey separates its oscillators and re-triggers the next note whether or not you’ve managed to lift your fingers off the previous one. It then recombines the oscillators as soon as your fingers catch up. This means that, as long as you play the note-ons at the right moments, you can afford to be less concerned about the note-offs. What’s more, if the overlaps between notes are not too long, it creates an interesting musical effect as one note merges into the next. Problem solved.</p>

      <h3>Greater Sophistication</h3>
      <p>It wasn’t long before other manufacturers recognised the potential of duophonic architecture. Among the more esoteric models, there soon appeared the EMS VCS3 with its duophonic DK2 keyboard, the Octave CAT and its successors, the OSCar, and even ARP’s duophonic 3620 keyboard for the ARP2600.</p>
      <p>Perhaps the most notorious of these was the CAT, which bore striking similarities to the Odyssey. After threats of legal action from ARP, Octave replaced the original CAT with the SRM (Series Revision Model) and SRMII, which offered yet another form of duophony that Octave called ‘two-note memory’. This grandiose name referred to a new keyboard scanning circuit that, if you played a two-note chord, memorised the interval between them and continued to apply it even if you then returned to playing monophonically. A form of programmable detune, this allowed you to switch between, for example, tunings in fourths and tunings in fifths, without having to adjust the oscillators themselves.</p>
      <p>But it was the Japanese who took duophony to its next level. The Korg 800DV, the Roland SH7 and the Yamaha CS40 were not just duophonic, but duo-timbral. Of these, the first to appear, yet in many ways the most sophisticated, was the Korg. Released in 1975, the 800DV didn’t copy ARP’s primitive duophonic architecture – it proved to be much, much more.</p>

      <h3>Duo-Timbrality</h3>
      <p>To understand the difference between the Odyssey and the 800DV, you need only compare <a href="#fig-19-7">Figure 19.7</a> to <a href="#fig-19-3">Figure 19.3</a>. Whereas the Odyssey had a single signal path, the 800DV was two distinct synthesizers living inside a single box.</p>
      <figure id="fig-19-7">
        <img src="images/fig-19-7.png" />
        <figcaption>Figure 19.7</figcaption>
      </figure>
      <p>Although <a href="#fig-19-7">Figure 19.7</a> is greatly simplified (like the Odyssey before it, the DV800 incorporated LFOs, ring modulators, and so on) it demonstrates an important principle: that of duo-timbrality. Quite distinct from duophony (which means two notes), duo-timbrality means that you can create two independent sounds, each with its own oscillators, filter settings, amplifier settings, and contours. What’s more, you can play each of these independently from the keyboard.</p>
      <p>Or can you? Surely, when you release one of the two notes you’re playing on an 800DV, the single remaining note will again become both the highest and the lowest, and we’ll be back to square one?</p>
      <p>To understand why the 800DV is (in this area) so superior to the Odyssey, let’s first look at the triggering it employs. Or rather, let’s not. That’s because the 800DV has no triggers – only gates that remain ‘high’ for the entire duration of any continuously or contiguously held notes. This gives a very different result if you play the sequence shown in <a href="#fig-19-4">Figure 19.4</a> and <a href="#fig-19-6">Figure 19.6</a>. (See <a href="#fig-19-8">Figure 19.8</a>.)</p>
      <figure id="fig-19-8">
        <img src="images/fig-19-8.png" />
        <figcaption>Figure 19.8</figcaption>
      </figure>
      <p>What happens in <a href="#fig-19-8">Figure 19.8</a> is distinct from <a href="#fig-19-6">Figure 19.6</a> in two ways. Firstly, there are no triggers to re-initialise the contour generators. Consequently, after the attack and decay phases, and while the notes continue to be held, the gate maintains the contours at their sustain levels. This eliminates the unnatural ‘re-firing’ of the lower drone throughout the sequence. Secondly, because the oscillators lie within distinct signal paths, you don’t get the unnatural combination of both when you play a single note. Although both signal paths produce the D when you release the upper C, the distinct tonalities of the two patches survive.</p>
      <p>If this were the only improvement over the Odyssey, the Korg would still be more usable as a duophonic instrument. But there’s far more to the 800DV than this, some of which is embodied in the Key Transpose section on the far right of its control panel.</p>
      <p>Key Transpose (see <a href="#fig-19-9">Figure 19.9</a>) is a badly named facility from the heyday of Japlish manuals, and it hides some unique facilities. Let’s start by putting the two switches in the AC position. In this mode, pressing just one key causes both of the 800DV’s internal synthesizers to sound together, whereas pressing two keys will split the timbres into Upper and Lower notes. Notwithstanding the separate signal paths, this is the same as the Odyssey.</p>
      <figure id="fig-19-9">
        <img src="images/fig-19-9.png" />
        <figcaption>Figure 19.9</figcaption>
      </figure>
      <p>AD mode is something new. In this mode, only the Lower synthesizer sounds when you press one key, and both are produced when you play two. This is a huge improvement, because it allows you to play two parts rather than just two notes. Now we’re getting close to true two-note polyphony. Sure, there are limitations, and the two notes are not correctly articulated in all circumstances. In particular, the tails of the Upper synthesizer can drop down to the Lower pitch when you release the Upper, but if you make Release = 0 the output from the 800DV begins to look much like the input sequence. (See <a href="#fig-19-10">Figure 19.10</a>.)</p>
      <figure id="fig-19-10">
        <img src="images/fig-19-10.png" />
        <figcaption>Figure 19.10</figcaption>
      </figure>
      <p>BC mode is identical to AD mode, except that it is the Upper synthesizer you hear when just one key is pressed, and the Lower joins in when you press a second. Not much use for our example sequence, but ideal for the times when you want to hold a drone with your right hand and play a moving line with your left. (This does not necessarily mean that the right-hand note is the higher pitched; you can tune the Upper and Lower synthesizers to any octaves and pitches you choose.)</p>
      <p>Finally, we come to BD mode. It works like this: play one note and nothing happens; play two and you hear both. (See <a href="#fig-19-11">Figure 19.11</a>.)</p>
      <figure id="fig-19-11">
        <img src="images/fig-19-11.png" />
        <figcaption>Figure 19.11</figcaption>
      </figure>

      <h3>The Repeat Function</h3>
      <p>You might think that we have now plumbed the depths of duophony – but you would be wrong. If you look underneath the Key Transpose section on the DV’s control panel, you’ll find another section, called Repeat. This offers two sliders, plus a Mode selector knob with six positions. (See <a href="#fig-19-12">Figure 19.12</a>.)</p>
      <figure id="fig-19-12">
        <img src="images/fig-19-12.png" />
        <figcaption>Figure 19.12</figcaption>
      </figure>
      <p>The action of the left-hand slider is obvious: it’s a clock. The action of the second slider is less obvious, but will become clear in a moment. As for the Mode selector… well, let’s look at each of the modes in turn.</p>
      <p>Mode A leaves the Lower voice unaffected, but retriggers the Upper voice at the clock rate, with the length and position of the Gate defined by the second slider. (This is important because the start of the ‘next’ cycle truncates the current Gate, so you can alter the character of the sound by moving the second slider.)</p>
      <p>Mode B is the same, except that it is the Lower voice that is retriggered, while the Upper is left unaffected. Mode C is similar, but retriggers both voices simultaneously. Things get even more interesting with Mode D, because this retriggers the voices alternately. (See <a href="#fig-19-13">Figure 19.13</a>.)</p>
      <figure id="fig-19-13">
        <img src="images/fig-19-13.png" />
        <figcaption>Figure 19.13</figcaption>
      </figure>

      <h3>A Practical Application</h3>
      <p>Before looking at mode E, let’s imagine that you have programmed the Upper synthesizer to produce a high-pass filtered noise burst whose amplitude decays rapidly to silence. At the same time, you’ve programmed the Lower synthesizer to produce a tonal sound that decays more slowly, and swoops downward in pitch as it does so. Put the two together and, if you set everything correctly, you have the components of many classic analogue drum sounds.</p>
      <p>Play one note in the Key Transpose AC mode and you will hear both sounds together – an analogue snare. One note in BC mode gives the Upper voice only (which you can tune to sound like an analogue hi-hat), while one note in AD mode gives the Lower voice. This, played at the bottom of the keyboard, can sound like an analogue kick drum. Played across the middle register, it imitates analogue toms.</p>
      <p>Next, let’s add the Repeat Mode. There are 24 permutations of Key Transpose and Repeat, so we’ll consider just one of these: AD and C. The Key Transpose mode determines that the Lower sound (the ‘body’ of the drum) will sound whenever you press a key, and that the Upper sound (the snare or hi-hat) only sounds when you press a second key simultaneously. At the same time, the Repeat mode ensures that both the Lower and Upper repeat whenever you hold a key for a reasonable length of time.</p>
      <p>Putting the two together you’ll find that, if you hold one key, Lower repeats with a steady kick beat, but there is no sound from Upper. If you then play rhythmically on a second, higher, key, you can produce hi-hat-type patterns. If you hold Upper for an extended period, it too repeats on the beat. Of course, you can mix and match these responses to create new patterns, and experimentation with the other modes will yield different results.</p>

      <h3>From Duophonic To Digital</h3>
      <p>Finally, let’s consider Repeat mode E. From <a href="#fig-19-13">Figure 19.13</a> you can see that this plays a single, curtailed instance of the Upper voice, followed by the Lower voice.</p>
      <p>Let’s imagine that you want to program a composite sound with two quite different tonal characteristics. You can’t do this on a monophonic synthesizer because, flexible as filters, amplifiers, and ADSR envelope generators may be, they don’t permit you to change the fundamental nature of a sound in mid-note. However, mode E allows you to do precisely this, with the rate at which the Lower synthesizer replaces the Upper one determined by the repeat speed and the position of the gate width control.</p>
      <p>Although we didn’t realise it at the time, the 800DV was the first instrument to introduce the concept of ‘partials’. For example, you could use Upper to create a noise-based snippet of sound – a ‘chiff’ – at the start of a note, followed quickly by a tonal sound produced by the Lower synthesizer. This is exactly the same concept that Roland re-introduced more than a decade later when they released their first digital synthesizer, the D50. The D50 used a PCM sample for the attack partial and a digitally generated waveform for the sustain, but the principle was the same.</p>
      <p>Consequently, although I stated above that "duophonic synths are far more limited and far less intuitive than you might expect", the duo-timbral Korg 800DV demonstrates that I must modify this month’s Synth Secret considerably. It now reads:</p>
      <p><em>Duophonic synthesizers are far less than polyphonic synthesizers restricted to playing two notes at a time, but duo-timbral synthesizers are far more than monophonic synthesizers that can play two notes at a time.</em></p>
      <p>Logically enough, next month I’ll be following up the last two issues’ discussions of monophony and duophony with an article about polyphony!</p>
    </section>
  </body>
</html>
